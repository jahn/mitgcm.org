#! /usr/bin/env bash

# $Header: /u/gcmpack/mitgcm.org/front_content/make_summary,v 1.43 2008/08/07 15:40:02 jmc Exp $
#
#  The purpose of this script is to create HTML summaries of the
#  directories produced by the "parse_emails" script.


usage()
{
    echo
    echo "Usage:  $0 [OPTIONS]"
    echo 
    echo "where possible OPTIONS are:"
    echo "  (-help|-h)           print usage"
    echo "  (-date |-d )PERIOD   run for PERIOD=\"YYYY_MM\""
    echo "                         [def=\"$PERIOD\"]"
    echo 
    exit 1
}

CURR_PER=`date +%Y`"_"`date +%m`
# defaults
PERIOD=$CURR_PER

#  Parse options
ac_prev=
for ac_option ; do

    # If the previous option needs an argument, assign it.
    if test -n "$ac_prev"; then
        eval "$ac_prev=\$ac_option"
        ac_prev=
        continue
    fi

    ac_optarg=`expr "x$ac_option" : 'x[^=]*=\(.*\)'`

    case $ac_option in
	
	-help | --help | -h | --h)
	    usage ;;
	
        -date | --date | -d | --d)
            ac_prev=PERIOD ;;
        --date=* | -date=*)
            PERIOD=$ac_optarg ;;

        *)
	    echo "Error: don't understand argument \"$ac_option\""
	    usage
            ;;

     esac

done

#INDIR="/net/orwell/export/export-9/mitgcm-testing/results/$PERIOD"
#OUTDIR="/home/jmc/mitgcm/test_web/summary"
INDIR="/u/u0/httpd/html/testing/results/$PERIOD"
OUTDIR="/u/u0/httpd/html/testing/summary"

OUTFILE=$OUTDIR"/output_"$PERIOD".html"
res_url="http://mitgcm.org/testing/"

#  Create the links in $OUTFILE :
echo "Creating the \"latest\" file for each machine: "
the_date=`date`
cat > $OUTFILE << EOF
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>MITgcm testing summary</title>
    <meta name="author" content="Ed Hill" />

    <!-- <base href="http://mitgcm.org/testing/summary/" /> -->

    <!-- Hinting for menu generation -->
    <meta name="add_name_0" content="Testing" />
    <meta name="add_name_1" content="" />
    <meta name="add_name_2" content="" />
    <meta name="add_title" content="Testing" />
    <!-- Hinting for menu generation -->

  </head>
  <body>
    <p>The MITgcm model is tested
      (compiled and run) in an automated fashion on a varirety of
      different machines.  The following is a summary of the MITgcm
      verification suite for the time period: <b>$PERIOD</b>.</p>

    <p>The machine naming scheme is:<br /></p>
    <table align="center" cellpadding="0" border="0">
      <tr bgcolor="#00cccc"> <td><b>Machine Type</b></td> <td><b>Nickname</b></td>
        <td><b>Notes</b></td> </tr>

      <tr bgcolor="#bbddff">
        <td>Intel P4</td> <td>"faulks"</td> <td>Fedora Core 6 </td> </tr>
      <tr bgcolor="#bbffdd">
        <td> Intel P4</td> <td>"eddy"</td> <td>Fedora Core 5</td> </tr>
      <tr bgcolor="#bbddff">
        <td> Intel P4 </td> <td>"bay"</td> <td>Fedora Core 5 </td> </tr>
      <tr bgcolor="#bbffdd">
        <td> Intel P4 </td> <td>"meander"</td> <td>Fedora Core 7 </td> </tr>
      <tr bgcolor="#bbddff">
        <td> Intel P4 </td> <td>"lagoon"</td> <td>Fedora Core 8 </td> </tr>
      <tr bgcolor="#bbffdd">
        <td> Intel P4 </td> <td>"hugo"</td> <td>Fedora Core 9 </td> </tr>

      <tr bgcolor="#bbddff">
        <td> <a href="http://acesgrid.org">ACESgrid Dell Xeon</a> </td>
        <td>"aces"</td><td>Fedora Core 2</td> </tr>

      <!--
      <tr bgcolor="#bbffdd">
        <td> Intel P3/P4 Beowulf </td> <td>"myrinet"</td>
        <td><a href="http://mitgcm.org/projects/MITGCM_CLUSTER/">MITgcm cluster
        facility </a></td> </tr>
      <tr bgcolor="#bbddff">
        <td>Alpha cluster</td> <td>"halem"</td>
        <td><a href="http://nccstag.gsfc.nasa.gov/halem/quickstart_halem.html">
        NASA NCCS Halem</a></td> </tr>
      -->

      <!--
      <tr bgcolor="#bbffdd">
        <td> SGI Origin 2000 </td> <td>"hopper"</td>
        <td><a href="http://www.nas.nasa.gov/User/Systemsdocs/O2K/o2k.html">
        NAS SGI Origin 2000 </a></td> </tr>
      <tr bgcolor="#bbddff">
        <td> SGI Origin 3000</td><td>"lomax"/"turing"</td>
        <td><a href="http://www.nas.nasa.gov/User/Systemsdocs/O3K/o3k.html">
        NAS SGI Origin 3000 </a></td> </tr>
      -->

      <tr bgcolor="#bbffdd">
        <td> SGI Altix Cluster </td> <td>"columbia"</td>
        <td><a href="http://www.nas.nasa.gov/Resources/Systems/columbia.html">
        NAS Columbia </a></td> </tr>

      <!--
      <tr bgcolor="#bbffdd">
        <td> SGI Altix 350 </td> <td>"altix350"</td>
        <td><a href="http://acesgrid.org/geocluster/">MIT ACESgrid
        GeoCluster</a></td> </tr>
      <tr bgcolor="#bbddff">
        <td> IBM POWER3 SP </td> <td>"bf"</td>
        <td><a href="http://www.scd.ucar.edu/computers/blackforest/">NCAR Blackforest
        </a></td> </tr>
      <tr bgcolor="#bbffdd">
        <td> IBM/Apple dual G5 </td> <td>"two"</td>
        <td>Mac OSX 10.3 (gcc 3.4) </td> </tr>
      -->
      <tr bgcolor="#bbddff">
        <td> IBM POWER4 SP </td> <td>"edvir"</td> <td> AIX 5.2 </td> </tr>
      <tr bgcolor="#bbffdd">
        <td> IBM POWER5+ SP </td> <td>"blueice"</td>
        <td><a href="http://www.scd.ucar.edu/computers/blueice/">NCAR Blueice
        </a></td> </tr>

      <tr bgcolor="#bbddff">
        <td><a href="http://www.darwinproject.mit.edu/wiki/">Intel Xeon (Woodcrest) cluster</a>
        </td> <td>"beagle"</td><td>Rocks 4.3 (x86_64)</td> </tr>

      <tr bgcolor="#bbffdd">
        <td> AMD Opteron </td> <td>"batsi"</td> <td>Fedora Core 4 (AMD64)</td> </tr>
      <tr bgcolor="#bbddff">
        <td> AMD Opteron </td> <td>"starp"</td> <td>SuSE SLES 10 (AMD64)</td> </tr>

      <tr bgcolor="#bbffdd">
        <td> Sun UltraSparc IV </td> <td>"rays"</td> <td>Solaris 9</td> </tr>
      <!--
      <tr bgcolor="#bbffdd">
        <td> Sun UltraSparc IV </td> <td>"model"</td> <td>Solaris 9</td> </tr>
      -->
      <tr bgcolor="#bbddff">
        <td> NEC SX-8 </td> <td>"sx8"</td> <td>Super-UX </td> </tr>
      <tr bgcolor="#bbffdd">
        <td> Cray XD1 (AMD Opteron) </td> <td>"xd1"</td>
        <td>Cray HPC enhanced Linux 2.6.5 </td> </tr>
      <tr bgcolor="#bbddff">
        <td> PowerPC970MP cluster </td> <td>"bigred"</td>
        <td>SuSE SLES 9 (PPC) </td> </tr>

      <tr bgcolor="#bbffdd">
        <td><a href="http://www.testdrive.hp.com/current.shtml"> HP test-drive </a>
        (Pentium III) </td> <td>"td152"</td> <td> FreeBSD 6.2 </td> </tr>
      <tr bgcolor="#bbddff">
        <td><a href="http://www.testdrive.hp.com/current.shtml"> HP test-drive </a>
        (Itanium II) </td> <td>"td187"</td> <td>SuSE SLES 10 </td> </tr>
      <tr bgcolor="#bbffdd">
        <td><a href="http://www.testdrive.hp.com/current.shtml"> HP test-drive </a>
        (PA-RISC 8900) </td> <td>"td191"</td> <td> HP-UX 11i 11.11 </td> </tr>
      <tr bgcolor="#bbddff">
        <td><a href="http://www.testdrive.hp.com/current.shtml"> HP test-drive </a>
        (Itanium II) </td> <td>"td194"</td> <td> HP-UX 11i v3 </td> </tr>
      <tr bgcolor="#bbffdd">

      <!--
      <tr bgcolor="#bbddff"> <td>  </td> <td>""</td>
        <td></td> </tr>
      -->

    </table>

    <p><br />
      The complete output for the verification runs can be found in
      <a href="http://mitgcm.org/testing/summary/">the summary pages</a>
      and the <a href="http://mitgcm.org/testing/results/">testing archives</a>.
      The latest reports are:</p>
    <table align="center" cellpadding="0" cellspacing="0" border="0" width="95%">
<tr bgcolor="#00cccc">
  <td height="0"> <b>Nickname</b> </td>
  <td> <b>OPTFILE Name</b> </td>
  <td> <b>Type</b> </td>
  <td> <b>Date</b> </td>
  <td> <b>Summary</b> </td>
  <td> <b>Ratio</b> </td>
</tr>

EOF

color="#bbffdd"
ncolor="#bbddff"

MACHINES="faulks aces eddy bay meander lagoon hugo"
MACHINES="$MACHINES columbia edvir rays sx8 xd1"
MACHINES="$MACHINES beagle batsi starp"

( cd $INDIR ; ls -1 -t */summary.txt | sed 's/\/summary.txt//' ) > ./dir_all

MALL=`cat ./dir_all | sed -e 's|_| |g' | awk '{print $2}' | sort | uniq`
for madd in $MALL ; do
    present=0
    for m in $MACHINES ; do
        echo $madd | grep $m > /dev/null 2>&1
        RETVAL=$?
        test $RETVAL = 0  &&  present=1
        continue
    done
    test $present = 0  &&  MACHINES="$MACHINES $madd"
done
#MACHINES="faulks"

for mname in $MACHINES ; do

    echo "  $mname"

    dir_list=`grep $mname ./dir_all`
    echo -n "" > ./mlist

    for i in $dir_list ; do

	dir=$INDIR"/"$i
	OPTFILE=
	if test -r $dir/summary.txt ; then
	    comm=`grep 'OPTFILE=' $dir/summary.txt`
	    eval $comm
	    OPTFILE=${OPTFILE##*/}
	fi
	if test "x$OPTFILE" = x -a -r "$dir/genmake_state" ; then
	    comm=`grep 'OPTFILE=' $dir/genmake_state 2>/dev/null`
	    eval $comm
	    OPTFILE=${OPTFILE##*/}
	fi
	if test "x$OPTFILE" = x ; then
	    comm=`grep '^# OPTFILE=' $dir/*/Makefile* 2>/dev/null | head -1`
	    comm=${comm##*#}
	    eval $comm
	    OPTFILE=${OPTFILE##*/}
	fi
	if test "x$OPTFILE" = x ; then
	    OPTFILE="not_explicitly_specified"
	fi

	ADJOINT=
	RESTART=0
	NOI3E=0
	if test -r $dir/summary.txt ; then
	    comm=`grep 'ADJOINT=true' $dir/summary.txt 2>/dev/null`
	    eval $comm
	    RESTART=`grep -c 'test 2+2=4 summary' $dir/summary.txt`
	    NOI3E=`grep -c "^run: .*testreport .* '-noieee' " $dir/summary.txt`
	fi
	if test "x$RESTART" = x0 ; then
	    kind="forward"
	    test "x$ADJOINT" = xtrue  &&  kind="adjoint"
	else
	    kind="restart"
	fi
	if test "x$NOI3E" = x1 ; then
	    OPTFILE="${OPTFILE}.noieee"
	fi

	t_pass="--"
	t_tot="--"
	if test -r $dir/summary.txt ; then
	    grep '^[YN] [YN] [YN] [YN]' $dir/summary.txt > ./all_tests 2>/dev/null
	    t_tot=`cat ./all_tests | wc -l | sed -e 's| ||g'`
	    t_pass=`grep '^Y Y Y Y' ./all_tests | grep 'pass ' | wc -l | sed -e 's| ||g'`
	fi
	rm -f ./all_tests
	# echo "${dir##*/} : $t_pass out of $t_tot"

	tokens=`echo $i | sed -e 's|_| |g'`
	echo "" > ./ms_tmp
	for tok in $tokens ; do
	    echo $tok >> ./ms_tmp
	done
	DAY=`cat ./ms_tmp | awk '(length($1)==8 && substr($1,0,3)=="200")'`
	rm -f ./ms_tmp

	echo "$OPTFILE$kind $DAY $OPTFILE $kind $i $t_pass:$t_tot" >> ./mlist

    done

    # helpful for debugging
    # cat ./mlist

    #  Do we have any data?  If so, create the latest pointer.
    num=`wc -l ./mlist | awk '{print $1}'`
    if test $num -gt 0 ; then

	# swap colors
        ctmp=$color
        color=$ncolor
        ncolor=$ctmp

	keys=`cat ./mlist | cut -d " " -f 1 | sort | uniq`

	for key in $keys ; do
	    tline=`grep "^$key " ./mlist | head -1`
	    ratio=`echo $tline | cut -d " " -f 6`
	    ldir=`echo $tline | cut -d " " -f 5`
	    kind=`echo $tline | cut -d " " -f 4`
	    optf=`echo $tline | cut -d " " -f 3`
	    DAY=`echo $tline | cut -d " " -f 2`
	    URL="results/$PERIOD/$ldir"
	    cat <<EOF >>$OUTFILE
<tr bgcolor="$color">
  <td height="0"> $mname </td>
  <td> $optf </td>
  <td> $kind </td>
  <td> <a href="$res_url$URL">$DAY</a> </td>
  <td> <a href="$res_url$URL/summary.txt"> summary.txt </a> </td>
  <td> $ratio </td>
</tr>
EOF
	done
    fi

done

cat >> $OUTFILE << EOF
<tr bgcolor="#00cccc">
  <td height="0" colspan="6" align="center" >This table generated on: $the_date</td>
</tr>

    </table>

<p>Examples of the scripts used for these testing runs can be obtained from: <a
href="http://mitgcm.org/cgi-bin/viewcvs.cgi/MITgcm/tools/example_scripts/">
MITgcm/tools/example_scripts</a>.</p>


  </body>
</html>

EOF

rm -f ./dir_all ./mlist

#- put the file in place
chgrp gcmpack $OUTFILE
chmod 664 $OUTFILE
LATEST=$OUTDIR"/latest_"$PERIOD".html"
mv -f $OUTFILE $LATEST

if test "x$PERIOD" = "x$CURR_PER" ; then
    cp $LATEST ./testing.xml
    (
	cd $OUTDIR
	rm -f latest.html
	ln -s $LATEST latest.html
    )
fi
